#!/usr/bin/env python3
import sys
import os

from PySide2.QtCore import Slot, qApp, QSize, Qt
from PySide2.QtGui import QKeySequence, QIcon
from PySide2.QtWidgets import (
    QMainWindow,
    QApplication,
    QMessageBox,
    QStyle,
    QWidgetAction,
    QTabWidget,
)

from tabs.dirbuster_tab import DirBusterTab
from tabs.nmap_tab import NmapScanTab


class MainWindow(QMainWindow):
    def __init__(self):
        QMainWindow.__init__(self)
        self.setWindowTitle("PyPentest - Information Gathering")

        # Menu
        self.menu = self.menuBar()
        self.file_menu = self.menu.addMenu("File")
        self.about_menu = self.menu.addMenu("About")

        self.set_menu()
        self.set_icon()

        # Add Widget
        tab_widget = QTabWidget()
        tab_widget.addTab(NmapScanTab(), "Nmap")
        tab_widget.addTab(DirBusterTab(), "Dir Buster")

        self.setCentralWidget(tab_widget)

        # Window dimensions & center
        geometry = qApp.desktop().availableGeometry(self)
        self.width_size = geometry.width() * 0.45
        self.height_size = geometry.height() * 0.55

        self.setGeometry(
            QStyle.alignedRect(
                Qt.LeftToRight,
                Qt.AlignCenter,
                QSize(self.width_size, self.height_size),
                geometry,
            )
        )

    def set_menu(self):
        # Exit QWidgetAction
        exit_item = QWidgetAction(self.about_menu)
        exit_item.setText("Exit")
        exit_item.setShortcut(QKeySequence.Quit)
        exit_item.setIcon(QIcon("assets/exit.png"))
        exit_item.triggered.connect(self.exit_app)

        self.file_menu.addAction(exit_item)

        # About QWidgetAction
        about_item = QWidgetAction(self.about_menu)
        about_item.setText("About")
        about_item.setShortcut(QKeySequence.FindNext)
        about_item.setIcon(QIcon("assets/gitlab.png"))
        about_item.triggered.connect(self.open_about_box)

        self.about_menu.addAction(about_item)

    def set_icon(self, icon_path="assets/icon.png"):
        if os.path.exists(icon_path):
            self.setWindowIcon(QIcon(icon_path))

    @Slot()
    def open_about_box(self):
        msg_box = QMessageBox()
        msg_box.setWindowTitle("About")
        msg_box.setText("Developper @xanhacks")
        msg_box.setInformativeText("https://gitlab.com/xanhacks")
        msg_box.exec_()

    @Slot()
    def exit_app(self):
        QApplication.quit()


if __name__ == "__main__":
    app = QApplication(sys.argv)

    window = MainWindow()
    window.show()

    sys.exit(app.exec_())
